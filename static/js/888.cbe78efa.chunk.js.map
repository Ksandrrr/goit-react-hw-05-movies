{"version":3,"file":"static/js/888.cbe78efa.chunk.js","mappings":"8SACMA,EAAM,mCAECC,EAAY,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,iEAAoEF,IADnE,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qDAKZC,EAAY,mCAAG,WAAOC,GAAP,uFACDL,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,oBAA8DP,IAD7D,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAIZI,EAAiB,mCAAG,WAAOC,GAAP,uFACNP,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4ES,IADtE,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIjBM,EAAS,mCAAG,WAAOH,GAAP,uFACEL,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,IADxE,cACfG,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAITO,EAAY,mCAAG,WAAOJ,GAAP,uFACDL,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,IADrE,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qD,8ICnBzB,GAAgB,KAAO,2BAA2B,KAAO,4B,SCyEzD,EAhEqB,WAAO,IAAD,EAEzB,GAAwCQ,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKjB,EAAAA,EAAAA,IAAaS,GAFlB,OAERX,EAFQ,OAGdU,EAAgBV,GAHF,gDAKdoB,QAAQC,IAAR,MALc,yDAAH,qDAQfF,GACD,GAAE,CAACR,IAEJ,IAEMW,EACJC,MAAMC,QAAQf,EAAagB,SAAWhB,EAAagB,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAA5C,MACpCC,EAAcpB,EAAaqB,aAAerB,EAAaqB,aAAaC,QAAQ,GAAK,GACrF,OACE,+BACE,gCACE,mBAAQC,QARC,kBAAMnB,EAASE,EAAf,EAQT,sBACA,gBAAIkB,UAAWC,EAAAA,KAAf,WACE,yBACE,gBACEC,IAAG,8CAAyC1B,EAAa2B,aACzDC,IAAK5B,EAAa6B,WAGtB,2BACE,wBAAK7B,EAAa6B,SAClB,yCAAiBT,EAAjB,UAEA,sCACA,uBAAIpB,EAAa8B,YAEjB,oCACA,uBAAIjB,WAGR,gBAAIW,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,MAAf,mCACA,yBACE,SAAC,KAAD,CAAMM,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,yBACE,SAAC,KAAD,UAKT,C","sources":["Shered/api/movies.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\nconst KEY = \"1c91a24341f096a044c8c534ec1c5275\"\n\nexport const fetchPopular = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`)\n    return response.data.results\n}\n\nexport const fetchMovieID = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchSearchMovies = async (search) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`)\n    return response.data\n}\nexport const fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    return response.data\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieDetails_list__y5Rs9\",\"Cast\":\"MovieDetails_Cast__yuQrX\"};","import {\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieID } from '../../Shered/api/movies';\nimport Style from './MovieDetails.module.css';\nconst MovieDetails = () => {\n\n  const [movieDetails, setMovieDetails] = useState([])\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchMovieID(movieId);\n        setMovieDetails(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const goBack = () => navigate(from);\n\n  const genresValue =\n    Array.isArray(movieDetails.genres) && movieDetails.genres.map(({ name }) => name).join(`, `);\nconst voteAverage = movieDetails.vote_average ? movieDetails.vote_average.toFixed(1) : '';\n  return (\n    <>\n      <section>\n        <button onClick={goBack}>Go Back</button>\n        <ul className={Style.list}>\n          <li>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          </li>\n          <li>\n            <h3>{movieDetails.title}</h3>\n            <p>Vote average {voteAverage}/10</p>\n\n            <h4>Ovirview</h4>\n            <p>{movieDetails.overview}</p>\n\n            <h5>Genres</h5>\n            <p>{genresValue}</p>\n          </li>\n        </ul>\n        <ul className={Style.Cast}>\n          <h4 className={Style.title}>Additial Information</h4>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <ul>\n          <Outlet />\n        </ul>\n      </section>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","fetchPopular","axios","response","data","results","fetchMovieID","id","fetchSearchMovies","search","fetchCast","fetchReviews","useState","movieDetails","setMovieDetails","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchData","console","log","genresValue","Array","isArray","genres","map","name","join","voteAverage","vote_average","toFixed","onClick","className","Style","src","poster_path","alt","title","overview","to"],"sourceRoot":""}