{"version":3,"file":"static/js/186.bf5708b5.chunk.js","mappings":"kOAsCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaJ,GAFlB,OAERK,EAFQ,OAGdN,GAAW,OAAIM,EAAKC,UAHN,uGAAH,qDAMfH,GACD,GAAE,CAACH,IAEJ,IAAMO,EAAUT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzC,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAKZ,IAED,OACE,8BACGX,EAAQc,OAAS,EAChBL,GAEA,oEAIP,C,8LCpCKM,EAAM,mCAECC,EAAY,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,iEAAoEF,IADnE,cAClBG,EADkB,yBAEjBA,EAASX,KAAKC,SAFG,2CAAH,qDAKZW,EAAY,mCAAG,WAAOR,GAAP,uFACDM,EAAAA,EAAAA,IAAA,6CAAgDN,EAAhD,oBAA8DI,IAD7D,cAClBG,EADkB,yBAEjBA,EAASX,MAFQ,2CAAH,sDAIZa,EAAiB,mCAAG,WAAOC,GAAP,uFACNJ,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EM,IADtE,cACvBH,EADuB,yBAEtBA,EAASX,MAFa,2CAAH,sDAIjBe,EAAS,mCAAG,WAAOX,GAAP,uFACEM,EAAAA,EAAAA,IAAA,6CAAgDN,EAAhD,4BAAsEI,IADxE,cACfG,EADe,yBAEdA,EAASX,MAFK,2CAAH,sDAITD,EAAY,mCAAG,WAAOK,GAAP,uFACDM,EAAAA,EAAAA,IAAA,6CAAgDN,EAAhD,4BAAsEI,IADrE,cAClBG,EADkB,yBAEjBA,EAASX,MAFQ,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/Shered/API/Movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/Shered/API/Movies';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchReviews(movieId);\n        setReviews([...data.results]);\n      } catch (error) {}\n    };\n    fetchData();\n  }, [movieId]);\n\n  const element = reviews.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <h5>{author}</h5>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return ( \n    <>\n      {reviews.length > 0 ? (\n        element\n      ) : (\n        <p>We dont have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from \"axios\";\nconst KEY = \"1c91a24341f096a044c8c534ec1c5275\"\n\nexport const fetchPopular = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`)\n    return response.data.results\n}\n\nexport const fetchMovieID = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchSearchMovies = async (search) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`)\n    return response.data\n}\nexport const fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    return response.data\n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","fetchReviews","data","results","element","map","id","author","content","length","KEY","fetchPopular","axios","response","fetchMovieID","fetchSearchMovies","search","fetchCast"],"sourceRoot":""}