{"version":3,"file":"static/js/76.3429ae82.chunk.js","mappings":"6PACA,EAAuB,mB,SCoCvB,EAhCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAGAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,GAAUP,GAFf,OAERQ,EAFQ,OAGdJ,GAAQ,OAAII,EAAKL,OAHH,gDAKdM,QAAQC,IAAR,MALc,qGAAH,qDASfJ,GACD,GAAE,CAACN,IACJ,IAAMW,EAAUR,EAAKS,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC3D,OACE,2BACE,gBACEC,IAAG,8CAAyCF,GAC5CG,IAAKL,EACLM,UAAWC,KAEb,uBAAIP,KACJ,uCAAeG,OAPRF,EAUZ,IACD,OAAO,8BAAGX,EAAKkB,OAAS,EAAIV,GAAU,oEACvC,C,8LCnCKW,EAAM,mCAECC,EAAY,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,iEAAoEF,IADnE,cAClBG,EADkB,yBAEjBA,EAASjB,KAAKkB,SAFG,2CAAH,qDAKZC,EAAY,mCAAG,WAAOb,GAAP,uFACDU,EAAAA,EAAAA,IAAA,6CAAgDV,EAAhD,oBAA8DQ,IAD7D,cAClBG,EADkB,yBAEjBA,EAASjB,MAFQ,2CAAH,sDAIZoB,EAAiB,mCAAG,WAAOC,GAAP,uFACNL,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EO,IADtE,cACvBJ,EADuB,yBAEtBA,EAASjB,MAFa,2CAAH,sDAIjBD,EAAS,mCAAG,WAAOO,GAAP,uFACEU,EAAAA,EAAAA,IAAA,6CAAgDV,EAAhD,4BAAsEQ,IADxE,cACfG,EADe,yBAEdA,EAASjB,MAFK,2CAAH,sDAITsB,EAAY,mCAAG,WAAOhB,GAAP,uFACDU,EAAAA,EAAAA,IAAA,6CAAgDV,EAAhD,4BAAsEQ,IADrE,cAClBG,EADkB,yBAEjBA,EAASjB,MAFQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Shered/API/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__9bpv2\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'components/Shered/API/Movies';\nimport Style from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchCast(movieId);\n        setCast([...data.cast]);\n      } catch (err) {\n        console.log(err);\n      } finally {\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  const element = cast.map(({ original_name, id, profile_path, character }) => {\n    return (\n      <li key={id}>\n        <img\n          src={`https://image.tmdb.org/t/p/original/${profile_path}`}\n          alt={original_name}\n          className={Style.Cast}\n        />\n        <p>{original_name}</p>\n        <p>Character: {character}</p>\n      </li>\n    ); \n  });\n  return <>{cast.length > 0 ? element : <p>We dont have any reviews for this movie</p>}</>;\n};\nexport default Cast;\n","import axios from \"axios\";\nconst KEY = \"1c91a24341f096a044c8c534ec1c5275\"\n\nexport const fetchPopular = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`)\n    return response.data.results\n}\n\nexport const fetchMovieID = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchSearchMovies = async (search) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`)\n    return response.data\n}\nexport const fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    return response.data\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchData","fetchCast","data","console","log","element","map","original_name","id","profile_path","character","src","alt","className","Style","length","KEY","fetchPopular","axios","response","results","fetchMovieID","fetchSearchMovies","search","fetchReviews"],"sourceRoot":""}