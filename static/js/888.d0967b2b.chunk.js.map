{"version":3,"file":"static/js/888.d0967b2b.chunk.js","mappings":"uQACA,GAAgB,KAAO,2BAA2B,KAAO,4B,SCgFzD,EAvEqB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA8BR,EAAAA,EAAAA,UAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaT,GAFlB,OAERU,EAFQ,OAGdnB,EAASmB,EAAKC,aACdlB,EAASiB,EAAKlB,OACdG,EAAYe,EAAKhB,UACjBG,GAAU,OAAIa,EAAKd,SACnBG,EAAWW,EAAKE,aAAaC,QAAQ,IAPvB,kDASdC,QAAQC,IAAR,MATc,0DAAH,qDAYfP,GACD,GAAE,CAACR,IAEJ,IAEMgB,EACJC,MAAMC,QAAQtB,IAAWA,EAAOuB,KAAI,qBAAGC,IAAH,IAAoBC,KAA/B,MAE3B,OACE,+BACE,gCACE,mBAAQC,QARC,kBAAMpB,EAASE,EAAf,EAQT,sBACA,gBAAImB,UAAWC,EAAAA,KAAf,WACE,yBACE,gBACEC,IAAG,8CAAyCnC,GAC5CoC,IAAKlC,OAGT,2BACE,wBAAKA,KACL,yCAAiBM,EAAjB,UAEA,sCACA,uBAAIJ,KAEJ,oCACA,uBAAIsB,WAGR,gBAAIO,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,MAAf,mCACA,yBACE,SAAC,KAAD,CAAMG,GAAG,OAAT,uBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,yBACE,SAAC,KAAD,UAKT,C,8LC/EKC,EAAM,mCAECC,EAAY,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,iEAAoEF,IADnE,cAClBG,EADkB,yBAEjBA,EAASrB,KAAKsB,SAFG,2CAAH,qDAKZvB,EAAY,mCAAG,WAAOwB,GAAP,uFACDH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,oBAA8DL,IAD7D,cAClBG,EADkB,yBAEjBA,EAASrB,MAFQ,2CAAH,sDAIZwB,EAAiB,mCAAG,WAAOC,GAAP,uFACNL,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EO,IADtE,cACvBJ,EADuB,yBAEtBA,EAASrB,MAFa,2CAAH,sDAIjB0B,EAAS,mCAAG,WAAOH,GAAP,uFACEH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,4BAAsEL,IADxE,cACfG,EADe,yBAEdA,EAASrB,MAFK,2CAAH,sDAIT2B,EAAY,mCAAG,WAAOJ,GAAP,uFACDH,EAAAA,EAAAA,IAAA,6CAAgDG,EAAhD,4BAAsEL,IADrE,cAClBG,EADkB,yBAEjBA,EAASrB,MAFQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/Shered/API/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieDetails_list__y5Rs9\",\"Cast\":\"MovieDetails_Cast__yuQrX\"};","import {\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieID } from 'components/Shered/API/Movies';\nimport Style from './MovieDetails.module.css';\nconst MovieDetails = () => {\n  const [image, setImage] = useState(``);\n  const [title, setTitle] = useState(``);\n  const [overview, setOverview] = useState(``);\n  const [genres, setGenres] = useState(``);\n  const [average, setAverage] = useState(0);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchMovieID(movieId);\n        setImage(data.poster_path);\n        setTitle(data.title);\n        setOverview(data.overview);\n        setGenres([...data.genres]);\n        setAverage(data.vote_average.toFixed(1));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const goBack = () => navigate(from);\n\n  const genresValue =\n    Array.isArray(genres) && genres.map(({ name }) => name).join(`, `);\n\n  return (\n    <>\n      <section>\n        <button onClick={goBack}>Go Back</button>\n        <ul className={Style.list}>\n          <li>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${image}`}\n              alt={title}\n            />\n          </li>\n          <li>\n            <h3>{title}</h3>\n            <p>Vote average {average}/10</p>\n\n            <h4>Ovirview</h4>\n            <p>{overview}</p>\n\n            <h5>Genres</h5>\n            <p>{genresValue}</p>\n          </li>\n        </ul>\n        <ul className={Style.Cast}>\n          <h4 className={Style.title}>Additial Information</h4>\n          <li>\n            <Link to=\"cast\">Genres</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <ul>\n          <Outlet />\n        </ul>\n      </section>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from \"axios\";\nconst KEY = \"1c91a24341f096a044c8c534ec1c5275\"\n\nexport const fetchPopular = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`)\n    return response.data.results\n}\n\nexport const fetchMovieID = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchSearchMovies = async (search) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`)\n    return response.data\n}\nexport const fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    return response.data\n}"],"names":["useState","image","setImage","title","setTitle","overview","setOverview","genres","setGenres","average","setAverage","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchData","fetchMovieID","data","poster_path","vote_average","toFixed","console","log","genresValue","Array","isArray","map","name","join","onClick","className","Style","src","alt","to","KEY","fetchPopular","axios","response","results","id","fetchSearchMovies","search","fetchCast","fetchReviews"],"sourceRoot":""}