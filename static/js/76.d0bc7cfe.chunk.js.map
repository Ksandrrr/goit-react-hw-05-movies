{"version":3,"file":"static/js/76.d0bc7cfe.chunk.js","mappings":"6SACMA,EAAM,mCAECC,EAAY,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,iEAAoEF,IADnE,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qDAKZC,EAAY,mCAAG,WAAOC,GAAP,uFACDL,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,oBAA8DP,IAD7D,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAIZI,EAAiB,mCAAG,WAAOC,GAAP,uFACNP,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4ES,IADtE,cACvBN,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIjBM,EAAS,mCAAG,WAAOH,GAAP,uFACEL,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,IADxE,cACfG,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAITO,EAAY,mCAAG,WAAOJ,GAAP,uFACDL,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,IADrE,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qD,8ICnBzB,EAAuB,mB,SCoCvB,EAhCa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAGAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKR,EAAAA,EAAAA,GAAUE,GAFf,OAERR,EAFQ,OAGdY,GAAQ,OAAIZ,EAAKW,OAHH,gDAKdI,QAAQC,IAAR,MALc,qGAAH,qDASfF,GACD,GAAE,CAACN,IACJ,IAAMS,EAAUN,EAAKO,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,cAAehB,EAAkC,EAAlCA,GAAIiB,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC3D,OACE,2BACE,gBACEC,IAAG,8CAAyCF,GAC5CG,IAAKJ,EACLK,UAAWC,KAEb,uBAAIN,KACJ,uCAAeE,OAPRlB,EAUZ,IACD,OAAO,8BAAGQ,EAAKe,OAAS,EAAIT,GAAU,oEACvC,C","sources":["Shered/api/movies.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\nconst KEY = \"1c91a24341f096a044c8c534ec1c5275\"\n\nexport const fetchPopular = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`)\n    return response.data.results\n}\n\nexport const fetchMovieID = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchSearchMovies = async (search) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`)\n    return response.data\n}\nexport const fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    return response.data\n}","// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__9bpv2\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport  {fetchCast}  from '../../Shered/api/movies';\nimport Style from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchCast(movieId);\n        setCast([...data.cast]);\n      } catch (err) {\n        console.log(err);\n      } finally {\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  const element = cast.map(({ original_name, id, profile_path, character }) => {\n    return (\n      <li key={id}>\n        <img\n          src={`https://image.tmdb.org/t/p/original/${profile_path}`}\n          alt={original_name}\n          className={Style.Cast}\n        />\n        <p>{original_name}</p>\n        <p>Character: {character}</p>\n      </li>\n    ); \n  });\n  return <>{cast.length > 0 ? element : <p>We dont have any reviews for this movie</p>}</>;\n};\nexport default Cast;\n"],"names":["KEY","fetchPopular","axios","response","data","results","fetchMovieID","id","fetchSearchMovies","search","fetchCast","fetchReviews","movieId","useParams","useState","cast","setCast","useEffect","fetchData","console","log","element","map","original_name","profile_path","character","src","alt","className","Style","length"],"sourceRoot":""}