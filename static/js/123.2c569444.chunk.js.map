{"version":3,"file":"static/js/123.2c569444.chunk.js","mappings":"uQAEaA,EAAS,WAEtB,OAAQ,gBAAKC,QAAQ,cAAb,UACN,mBAAQC,EAAE,KAAKC,GAAG,KAAKC,GAAG,QAE3B,EC8CD,EAjDmB,WACjB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAY,GACZE,GAAa,GAFG,mBAIKG,EAAAA,EAAAA,IAAkBV,GAJvB,OAIRW,EAJQ,OAKdR,GAAQ,OAAIQ,EAAKC,UACW,IAAxBD,EAAKC,QAAQC,QACfR,GAAY,GAPA,2EAWdE,GAAa,GAXC,6EAAH,qDAcXP,GACFS,GAEH,GAAE,CAACT,IAEJ,IAIMc,EAAUZ,EAAKa,KAAI,YAAkC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,aACrC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAb,mBAAuBD,EAAvB,aAAiCE,EAAaE,MAAM,EAAG,GAAvD,QADOH,EAIZ,IACD,OACE,gCACE,kBAAMI,SAbW,SAAAC,GACnBA,EAAEC,iBACFtB,EAAUqB,EAAEE,OAAOC,SAASzB,OAAO0B,MACpC,EAUG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGrB,GAAY,SAACZ,EAAD,IAAaU,GAAW,sCAAqBU,MAIjE,C,8LCnDKe,EAAM,mCAECC,EAAY,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,iEAAoEF,IADnE,cAClBG,EADkB,yBAEjBA,EAASrB,KAAKC,SAFG,2CAAH,qDAKZqB,EAAY,mCAAG,WAAOhB,GAAP,uFACDc,EAAAA,EAAAA,IAAA,6CAAgDd,EAAhD,oBAA8DY,IAD7D,cAClBG,EADkB,yBAEjBA,EAASrB,MAFQ,2CAAH,sDAIZD,EAAiB,mCAAG,WAAOV,GAAP,uFACN+B,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4E7B,IADtE,cACvBgC,EADuB,yBAEtBA,EAASrB,MAFa,2CAAH,sDAIjBuB,EAAS,mCAAG,WAAOjB,GAAP,uFACEc,EAAAA,EAAAA,IAAA,6CAAgDd,EAAhD,4BAAsEY,IADxE,cACfG,EADe,yBAEdA,EAASrB,MAFK,2CAAH,sDAITwB,EAAY,mCAAG,WAAOlB,GAAP,uFACDc,EAAAA,EAAAA,IAAA,6CAAgDd,EAAhD,4BAAsEY,IADrE,cAClBG,EADkB,yBAEjBA,EAASrB,MAFQ,2CAAH,qD","sources":["components/Shered/Loader/Loader.jsx","components/MoviesPage/MoviesPage.jsx","components/Shered/API/Movies.js"],"sourcesContent":["\n\nexport const Loader = () => {\n\nreturn (<svg viewBox=\"25 25 50 50\">\n  <circle r=\"20\" cy=\"50\" cx=\"50\"></circle>\n</svg>)\n}","import { useEffect, useState } from 'react';\nimport { fetchSearchMovies } from 'components/Shered/API/Movies';\nimport { Link } from 'react-router-dom';\nimport { Loader } from '../Shered/Loader/Loader';\nconst MoviesPage = () => {\n  const [search, setSearch] = useState(``);\n  const [item, setItem] = useState([]);\n  const [notFound, setNotFound] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setNotFound(false);\n      setIsLoading(true);\n      try {\n        const data = await fetchSearchMovies(search);\n        setItem([...data.results]);\n        if (data.results.length === 0) {\n          setNotFound(true);\n        }\n      } catch (err) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (search) {\n      fetchData();\n    }\n  }, [search]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearch(e.target.elements.search.value);\n  };\n  const element = item.map(({ title, id, release_date }) => {\n    return (\n      <li key={id}>\n        <Link to={`${id}`}>{`${title} (${release_date.slice(0, 4)})`}</Link>\n      </li>\n    );\n  });\n  return (\n    <section>\n      <form onSubmit={handleSearch}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {isLoading ? <Loader /> : notFound ? <h3>Not Found</h3> : element}\n      </ul>\n    </section>\n  );\n};\nexport default MoviesPage;\n","import axios from \"axios\";\nconst KEY = \"1c91a24341f096a044c8c534ec1c5275\"\n\nexport const fetchPopular = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`)\n    return response.data.results\n}\n\nexport const fetchMovieID = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchSearchMovies = async (search) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${search}`)\n    return response.data\n}\nexport const fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\nexport const fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    return response.data\n}"],"names":["Loader","viewBox","r","cy","cx","useState","search","setSearch","item","setItem","notFound","setNotFound","isLoading","setIsLoading","useEffect","fetchData","fetchSearchMovies","data","results","length","element","map","title","id","release_date","to","slice","onSubmit","e","preventDefault","target","elements","value","type","name","KEY","fetchPopular","axios","response","fetchMovieID","fetchCast","fetchReviews"],"sourceRoot":""}